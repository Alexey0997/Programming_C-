// Задача 37 для нечетного количества элементов в массиве. 
// Найдите произведение пар чисел в одномерном массиве. 
// Парой считаем первый и последний элемент, второй и предпоследний и т.д. 
// Результат запишите в новом массиве. [1 2 3 4 5] -> 5 8 3 [6 7 3 6] -> 36 21

Console.Clear();                               // Отчистили консоль. 
int[] array = GetArray(7, 0, 9);               // Инициализировали массив с помощью метода. 
Console.WriteLine();                           // Записали с новой строки. 
int[] col = new int[array.Length / 2 + 1];     // Задали новый пустой массив, длиной 1/2 исходного.
int index = 0;                                 // Ввели индекс для нового массива col.
for (int i = 0; i < array.Length / 2 + 1; i++) // Задали условия цикла для работы с исх. массивом. 
{
    if (i == array.Length - 1 - i)             // Если достигнут серединный элемент 
    {                                          // нечетного массива, то запишем его в
        col[index] = array[i];                 // новый массив int [] col без изменений. 
        Console.Write($"{col[index]} ");       // Выведем на печать. 
    }
    else
    {
        col[index] = array[i] * array[array.Length - 1 - i]; // Произведение крайних эл-в массива. 
        Console.Write($"{col[index]} ");                     // Печать произведения. 
        index++;                                             // Инкремент.
    }
}
// Опишем метод формирования массива.
int[] GetArray(int size, int minValue, int maxValue) 
{
    int[] res = new int[size];
    for (int i = 0; i < size; i++)
    {
        res[i] = new Random().Next(minValue, maxValue + 1);
        Console.Write($"{res[i]} ");
    }
    return res;
}

// Задача 31: Задайте массив из 12 элементов, заполненный случайными числами 
// из промежутка [-9, 9]. Найдите сумму отрицательных и положительных элементов массива.
// Например, в массиве [3,9,-8,1,0,-7,2,-1,8,-3,-1,6] сумма положительных чисел равна 29, 
// а сумма отрицательных равна -20.

// int[] GetArray(int size, int minValue, int maxValue) // Зададим метод создания массива.
// {
//     int[] res = new int[size];
//     for (int i = 0; i < size; i++)
//     {
//         res[i] = new Random().Next(minValue, maxValue + 1);
//         Console.Write($"{res[i]} ");
//     }
//     return res;
// }

// int[] array = GetArray(12, -9, 9); // Инициализируем массив (вызовем метод (12 - размер, -9, 9 - диапазон возможных значений)). 
// int positiveSum = 0; // int - выделим объем памяти для суммы + чисел, в который запишем значение 0.
// int negativeSum = 0; // int - выделим объем памяти для суммы - чисел, в который запишем значение 0.

// foreach (int el in array)  // Используем оператор цикла, который исследует каждый элемент массива. 
// {
//     if (el > 0) positiveSum += el;
//     else negativeSum += el;
// }
// Console.WriteLine();
// Console.WriteLine($"Сумма положительных элементов массива = {positiveSum}, сумма отрицательных чисел = {negativeSum}");


// Задача 32: Напишите программу замены элементов массива: 
// положительные элементы замените на соответствующие отрицательные, 
// и наоборот. Например, [-4, -8, 8, 2] -> [4, 8, -8, -2] 

// Console.Clear();
// int[] GetArray(int size, int minValue, int maxValue) // Опишем метод формирования массива.
// {
//     int[] res = new int[size];
//     for (int i = 0; i < size; i++)
//     {
//         res[i] = new Random().Next(minValue, maxValue + 1);
//         Console.Write($"{res[i]} ");
//     }
//     return res;
// }

// int[] array = GetArray(12, -9, 9);       // Инициализируем массив. 
// Console.WriteLine();
// for (int i = 0; i < array.Length; i++)   // Зададим условия цикла.
// {
//     array[i] = array[i] * -1;            // Умножим каждый эль-т массива на -1.
//     Console.Write($"{array[i]} ");       // Напечатаем результат произведения.
// }

// Console.WriteLine();      // Оператор foreach в данном случае не подходит
// foreach (int el in array) // т.к. он лишь переберет цифры, но не вернет их в массив.
// {
//     Console.Write($"{el*-1} ");
// }

// Задача 33: Задайте массив. Напишите программу, которая определяет, 
// присутствует ли заданное число в массиве.
// 4; массив [6, 7, 19, 345, 3] -> нет
// -3; массив [6, 7, 19, 345, 3] -> да

// Console.Clear();                             // Основная часть программы. 
// Console.WriteLine("Введите целое число: ");  // Запрос числа.
// int number = int.Parse(Console.ReadLine()!); // Считывание текста и перевод в цифру. 
// int[] array = GetArray(12, -9, 9);           // Вызов метода формирования массива. 
// Console.WriteLine();                         // Запись с новой строки. 
// string text = "";                            // Ввод переменной text, в которую
//                                              // положим одно из двух сообщений.  
// foreach (int el in array) // Используем оператор цикла для исследования массива. 
// {
//     if (el == number)     // Если есть совпадение с заданным числом, вывести текст
//     {                     // о его наличии в массиве. 
//         text = $"Число {number} имеется в массиве.";
//         break;            // Остановить проверку при первом совпадении. 
//     }
//     else                  // Если совпадений не обнаружено, то сообщить  
//     {                     // об отсутствии заданного числа в массиве. 
//         text = $"Число {number} отсутствует в массиве.";
//     }
// }
// Console.WriteLine(text);  // Вывести на печать сообщение text.

// int[] GetArray(int size, int minValue, int maxValue) // Опишем метод формирования массива.
// {
//     int[] res = new int[size];
//     for (int i = 0; i < size; i++)
//     {
//         res[i] = new Random().Next(minValue, maxValue + 1);
//         Console.Write($"{res[i]} ");
//     }
//     return res;
// }

// Задача 35: Задайте одномерный массив из 123 случайных чисел. 
// Найдите количество элементов массива, значения которых лежат в отрезке [10,99]. 
// Пример для массива из 5, а не 123 элементов. 
// В своём решении сделайте для 123 [5, 18, 123, 6, 2] -> 1 [1, 2, 3, 6, 2] -> 0
// [10, 11, 12, 13, 14] -> 5

// Console.Clear();
// int[] GetArray(int size, int minValue, int maxValue) // Опишем метод формирования массива.
// {
//     int[] res = new int[size];
//     for (int i = 0; i < size; i++)
//     {
//         res[i] = new Random().Next(minValue, maxValue + 1);
//         Console.Write($"{res[i]} ");
//     }
//     return res;
// }

// int[] array = GetArray(123, 0, 200);       // Инициализация массива. 
// Console.WriteLine();

// int count = 0;
// foreach (int el in array) 
// {
//     if(el>=10 && el<=99) count++;
// }
// Console.Write($"Количество элементов в заданном диапазоне = {count}.");

// Задача 37: Найдите произведение пар чисел в одномерном массиве. 
// Парой считаем первый и последний элемент, второй и предпоследний и т.д. 
// Результат запишите в новом массиве. [1 2 3 4 5] -> 5 8 3 [6 7 3 6] -> 36 21

// Console.Clear();
// int[] GetArray(int size, int minValue, int maxValue) // Опишем метод формирования массива.
// {
//     int[] res = new int[size];
//     for (int i = 0; i < size; i++)
//     {
//         res[i] = new Random().Next(minValue, maxValue + 1);
//         Console.Write($"{res[i]} ");
//     }
//     return res;
// }

// int[] array = GetArray(6, 0, 9);       // Инициализация массива с четным кол. эл-в. 
// Console.WriteLine();

// int[] col = new int[array.Length / 2]; // Задали новый пустой массив, длиной 1/2 исходного.
// int size = array.Length - 1;           // Ввели обратный счетчик для обозначения последнего эл-та массива.
// int index = 0;                         // Ввели индекс для нового массива col.
// for (int i = 0; i < array.Length / 2; i++) // Задали условия цикла для работы с исх. массивом. 
// {
//     col[index] = array[i] * array[size - i]; // Произведение крайних эл-в массива. 
//     Console.Write($"{col[index]} ");         // Печать произведения. 
//     index++;                                 // Инкремент.
// }

